# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

variables:
  DOCKER_TLS_CERTDIR: "/certs/client"
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  DEPLOYMENT_AUTH_HEADER: "Authorization: Basic ${DEPLOYMENT_AUTH}"

stages:
  - build
  - deploy

build:
  stage: build
  image: docker:19.03.1
  services:
    - docker:19.03.1-dind
  tags:
    - dind
    - docker
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CONTAINER_TEST_IMAGE .
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CI_REGISTRY_IMAGE

trigger_azure:
  stage: deploy
  image: curlimages/curl:latest
  script:
    # Don't forget to escape special characters (i.e. '\$') in your ENV variable
    # See https://stackoverflow.com/questions/46766903/how-to-trigger-manually-container-refresh/46769983#46769983
    - curl --fail -X POST -d "" -H "$DEPLOYMENT_AUTH_HEADER" $DEPLOYMENT_WEBHOOK
    # This will produce a non-zero exit code if the request fails
